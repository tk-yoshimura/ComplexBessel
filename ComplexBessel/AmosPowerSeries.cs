using DDoubleOptimizedBessel;
using MultiPrecision;
using MultiPrecisionComplex;
using System.Collections.ObjectModel;
using System.Diagnostics;

namespace ComplexBessel {
    public static class AmosPowerSeries<N> where N : struct, IConstant {
        static AmosPowerSeries() {
            if (default(N).Value > 8) {
                throw new ArgumentException(nameof(N));
            }
        }

        public static (MultiPrecision<N> g1, MultiPrecision<N> g2) Gamma12(MultiPrecision<N> nu) {
            Debug.Assert(MultiPrecision<N>.Abs(nu) <= 0.5);

            MultiPrecision<N> nu2 = nu * nu;
            MultiPrecision<N> gm = 1 / MultiPrecision<N>.Gamma(1d - nu), gp = 1 / MultiPrecision<N>.Gamma(1d + nu);

            MultiPrecision<N> g1 = G1Coef[^1];

            for (int i = G1Coef.Count - 2; i >= 0; i--) {
                g1 = g1 * nu2 + G1Coef[i];
            }

            MultiPrecision<N> g2 = (gm + gp) / 2d;

            return (g1, g2);
        }

        public static Complex<N> BesselK(MultiPrecision<N> nu, Complex<N> z, int terms = 256) {
            MultiPrecision<N> nu2 = nu * nu;
            Complex<N> t = Complex<N>.Log(2d / z), mu = nu * t;
            (MultiPrecision<N> g1, MultiPrecision<N> g2) = Gamma12(nu);

            Complex<N> f = (g1 * Complex<N>.Cosh(mu) + g2 * t * Sinhc(mu)) / MultiPrecision<N>.Sinc(nu);
            Complex<N> r = Complex<N>.Pow(z / 2d, nu);
            Complex<N> p = MultiPrecision<N>.Gamma(1d + nu) / (r * 2d), q = MultiPrecision<N>.Gamma(1d - nu) * r * 0.5d;

            Complex<N> c = f, v = Complex<N>.Ldexp(z * z, -2), u = v;

            for (int k = 1; k <= terms; k++) {
                f = (k * f + p + q) / (k * k - nu2);
                c = SeriesUtil<N>.Add(c, u, f, out bool convergence);

                if (convergence) {
                    break;
                }

                p /= k - nu;
                q /= k + nu;
                u *= v / (k + 1);
            }

            return c;
        }

        public static Complex<N> Sinhc(Complex<N> z) {
            if (z.Magnitude.Exponent > -MultiPrecision<N>.Bits / 2) {
                return Complex<N>.Sinh(z) / z;
            }
            else {
                Complex<N> z2 = z * z;

                return (120 + z2 * (20 + z2)) / 120;
            }
        }

        public static readonly ReadOnlyCollection<MultiPrecision<N>> G1Coef = new([
            "-5.772156649015328606065120900824024310421593359399235988057672348848677267776646709369470632917467495146314472498070824809605040144865428362241739976449235362535003337429373377376739427925952582470949160087352039481656708532331517766115286211995015079847937e-1",
            "4.200263503409523552900393487542981871139450040110609352206581297618009687597598854710770129478771323353200022200001805792037621099075181447805816907283782783355156941422840681585671757922536196664416350181665682109004334254906673031085386942302647163933721e-2",
            "4.219773455554433674820830128918739130165268418982248637691887327545901118558899606734728429375531504062334826057082510869875342573608881031728336193513216807653051215558592232817158189354800086887093374690761985231094669862796057544336120242135379457098626e-2",
            "-7.21894324666309954239501034044657270990480088023831800109478117362259497415854271408909012084988886376358019768885979531141530782277469074826842274888277821930645715406572081370328702741837361106318969628738926401212674063503622606967262281119253211124474e-3",
            "2.152416741149509728157299630536478064782419233783387503502674890856394637167847391861851194625624815259563219739244945163417211076747477123391086742668973557906175454607228737337091983400046734865215719165942151250609611490595370582548259601169491801275774e-4",
            "2.013485478078823865568939142102181838229483329797911526116267090822918618897047762330812383650301882610598611158717931945723532269982416612357113737088330997041202300337442465482349805785560019857678505838147808340261428265467157736711014454674223004617064e-5",
            "-1.133027231981695882374129620330744943324004838621075654295505395460408427303676342059099599341571794151723102554723472282247098515047076970814877245054820361527216773963022956952446219594483308210208907304801101488348848062734625098840906296035467239869914e-6",
            "-6.116095104481415817862498682855342867275865719712320867324029277235074352503861972826211688750122568389248723593760275052110202607289094841928198408739156977044243956049097412356065163620990532543731396877525356196920079422184202257312549571022890096705583e-9",
            "1.181274570487020144588126565436505577738759504932587590961892631696433914362731439517968288144559739788048758350566671400704726777156064156164018114386575307315494202805215438614394288438629133949868735821855227356344177768519582180435858700409517497369661e-9",
            "-7.782263439905071254049937311360777226068086181392938819435507326929869575078978038827379507664107281913393462406889059435100758544819098632173849066677032230561159253228543787258397911069334455291546933865105252140021359958145198606994108363499679436374093e-12",
            "-5.100370287454475979015481322863231802726886069707632117350104856573524478995817069832630638776198637918399239756229877506545858373218222666280148520519213916014594052438797288553022223908527602679036207665376113072641920293487322653095987724255008486001246e-13",
            "5.348122539423017982370017318727939948989715478120682111680954932109314539143484095664834414364685054397853809098406530725850844995404944330498484197135886024941531265742157107397211497099026474472225849562789416362144165107340702574397189889631659107527825e-15",
            "1.181259301697458769513764586842297831211557291804847879837508123334733315038984505739533277197454784107101214788428043535142384791714051278793763250267834125018304739726760027740706145303401692985181528870465535588292184230115862922674909050235336564050558e-16",
            "-1.4123806553180317815558039475667090370863507503345256256412226286007149117138456955524058652699332905253282343274935295865368301410838790290595935352475509024868439070354411903819825705111550294232814178843628764735129648916201027431571733694375487781306e-18",
            "-1.7144063219273374333839633702672570668126560625174331746498581922023399583377163871306729249802184043231287082868086735566795538077378897643290247750784442110072926947942475620101782491263654799227431712119311938094735721321818253756156851514380154090559e-20",
            "2.054233551766672789325025351355733796682037935238736412730055994866287097450154608872033304953794459887760242436492655589481113963373528689406144846172607082380624021901229068318399971955606589039414618732740933111279882603283419256685800408776714157821858e-22",
            "1.732356445910516639057428451564779799069749108794998413772556229948707253437644937356016550764325632918645300095506500117304431312095718666799512671926500827700449987010916301931216806659587068128796435317974422893990134285572341419899991434001667464652024e-24",
            "-1.864982941717294430718413161878666898945868429073668232174525370547977779337919412515560461735639811439437072510929019211910451640823770015824959982115268868904399396496791351561898699536110656141385315509000801077907045339824382392029399955212819955376283e-26",
            "-1.297781974947993668824414486330594165619499864639133196832056563724197497914816154415131743064983466738517782698941989852981445901153481846550882464704484665382600622163800300820673577805954290627032683587644929891961458186947557950481287947755819410786972e-28",
            "1.124584349277088090293654674261439512119411795583010816733382788358151611214495640966043464593040366521414137721125910688815581129146761277414262703225323143754643665094762215078336589276172724734634897689454203914151167415265810002772604623218007923110716e-30",
            "7.391451169615140823461289330108552823710568992451526766631590658842757336951317797009229749958592710082530672926356222160362679415010721668380381482020991294712583678792068856487861943015487708800538935165151420190918470327413444753652647104685748464042257e-33",
            "-4.639134641058722029944804907952228463057968679727149689582173186433747134226253338484914425373513509446309346939200268097591985628544824137456857133188972348879286214208169991194419402512839993882801885681676904641746067209604396569699189482826947858311629e-35",
            "-3.207995923613352622861237279082794391090146359726155187021700674060447268716078808202864077221509387183023728606375120249517932285662924128973703511394114639621024153376814860536212229052615408667476145660262021013606737082668823200642848292989556566846572e-37",
            "1.311174518881988712901058494389922190236625449557426040996577053017621135354731141689880547018780925247296981350891319553651027478373931029716530801174343243767134327319996290164448028142081791162497516161340575808669391739909230847595754117568319526912149e-39",
            "1.056233178503581218600561071538285049997035080292541271238680406609641706086578083236929517314977418554245480344205552577835412536106723630191323414563342211323849909911640719844098531779959493756931218719395454211668498013479986107075110119828826564032301e-41",
            "-2.424715494851782689673032938370921240736810458647758760417423235095038057040144210940931459371366254992550302915635530035743295403757806070621516761115831552741954727164901370915116810115038013709045943980013600638192066259892837963824887734007079826743704e-44",
            "-2.628332980940195449089037611873639354223849417809111652267926385916722614179582440787964678431660449651352500188065282964792549217295325197698848536208486505394898539009632431570607888253158027873769757245471728764599538164976160524675201959681776613504034e-46",
            "2.327942418699470598604262055622291845668777409599255125240400433638967025295552425276269398882546889470773693023981873682522062565178361846267400933215501937149904811602073623699082757858900554381906944313355017555520781351661607751192069402149596236432726e-49",
            "4.92829558677098993050445868221253259415784576444327346809237866575215465369662027544622926483970029612403921571720579895084380069422801734149338338822743773474929919539086766113895412352197996609178289917711787827432933446991537113691729384431077575139724e-51",
        ]);
    }
}
