using ComplexBessel;
using DoubleDouble;

namespace DDoubleOptimizedBesselTests {
    [TestClass()]
    public class RealBesselTests {
        [TestMethod()]
        public void BesselJTest() {
            for (double nu = -16; nu <= 16; nu += 0.25) {
                Console.WriteLine(nu);

                for (double x = 0.125; x <= 42; x += 0.125) {

                    ddouble expected = BesselN4.BesselJ(nu, x).R.ToString();
                    ddouble actual = DDoubleOptimizedBessel.RealBessel.BesselJ(nu, x);

                    ddouble err = ddouble.Abs((expected - actual) / expected);

                    Console.WriteLine($"{nu}, {x}, {err:e4}");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual);

                    Assert.IsTrue(err < 6e-27, $"\n{nu}, {x}\n{expected}\n{actual}\n{err:e4}");
                }

                Console.WriteLine(string.Empty);
            }
        }

        [TestMethod()]
        public void BesselYTest() {
            for (double nu = -16; nu <= 16; nu += 0.25) {
                Console.WriteLine(nu);

                for (double x = 0.125; x <= 42; x += 0.125) {

                    ddouble expected = BesselN4.BesselY(nu, x).R.ToString();
                    ddouble actual = DDoubleOptimizedBessel.RealBessel.BesselY(nu, x);

                    ddouble err = ddouble.Abs((expected - actual) / expected);

                    Console.WriteLine($"{nu}, {x}, {err:e4}");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual);

                    Assert.IsTrue(err < 6e-27, $"\n{nu}, {x}\n{expected}\n{actual}\n{err:e4}");
                }

                Console.WriteLine(string.Empty);
            }
        }

        [TestMethod()]
        public void BesselITest() {
            for (double nu = -16; nu <= 16; nu += 0.25) {
                Console.WriteLine(nu);

                for (double x = 0.125; x <= 42; x += 0.125) {

                    ddouble expected = BesselN4.BesselI(nu, x).R.ToString();
                    ddouble actual = DDoubleOptimizedBessel.RealBessel.BesselI(nu, x);

                    ddouble err = ddouble.Abs((expected - actual) / expected);

                    Console.WriteLine($"{nu}, {x}, {err:e4}");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual);

                    Assert.IsTrue(err < 4e-30, $"\n{nu}, {x}\n{expected}\n{actual}\n{err:e4}");
                }

                Console.WriteLine(string.Empty);
            }
        }

        [TestMethod()]
        public void BesselKTest() {
            for (double nu = 0; nu <= 16; nu += 0.25) {
                Console.WriteLine(nu);

                for (double x = 0.125; x <= 42; x += 0.125) {

                    ddouble expected = BesselN4.BesselK(nu, x).R.ToString();
                    ddouble actual = DDoubleOptimizedBessel.RealBessel.BesselK(nu, x);

                    ddouble err = ddouble.Abs((expected - actual) / expected);

                    Console.WriteLine($"{nu}, {x}, {err:e4}");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual);

                    Assert.IsTrue(err < 8e-30, $"\n{nu}, {x}\n{expected}\n{actual}\n{err:e4}");
                }

                Console.WriteLine(string.Empty);
            }
        }


        [TestMethod]
        public void BesselYInterpolateTest() {
            ddouble[] num16peps_expecteds = {
                "-2.773781224080996664594569251500603793250e16",
                "-4.450123852134823173004790163851327384844e11",
                "-7.368655184955525781995063516649200327290e8",
                "-8.314116418781916065258954885336932760416e6",
                "-272949.0277102876834528963163560590919786",
                "-17862.81343783978372361289872660418429812",
                "-1906.675276744830475382045468337869677891",
                "-294.8647994883016606898619415053656391392",
                "-61.31574109928006112642421273704745991315",
                "-16.33416589107662871817687653510874200577",
                "-5.407585838476336057384235235990550650768",
                "-2.190065680789719854119658622683911085576",
                "-1.079266131926259263436734903095492982621",
                "-0.6398781488889317672330762650582489513483",
                "-0.4354460769384310487892527316369411035552",
                "-0.3075580177347255705907265390210738911861",
                "-0.1902179370037073084719028030324090353768",
                "-0.06093428217256750730761050773836112551778",
                "0.07165469843799008089469185107270897448342",
                "0.1761874724426298075750049577792785983350",
                "0.2148727711516144835362041980727723964212",
                "0.1668553229653483560885179915346689925669",
                "0.04780289250785903300762323314478132301822",
                "-0.08838877544369837417780234187008348018005",
                "-0.1724235682203511445102356878286630675695",
                "-0.1579989800825308108411720370409835412803",
                "-0.05300158663610386760200062654241692359998",
                "0.07962121349239315668083673230940986532972",
                "0.1573819429683515379422863181414770513543",
                "0.1308960486599492321125040893101364245495",
                "0.01874559051376334778872075241539357106062",
                "-0.1022237692988386725453988283002962628443",
                "-0.1483593785932801402519789664054264349121",
                "-0.08829325864430714439153100422286250331789",
                "0.03328734543305640862894214687831631546391",
                "0.1269260752607982041537306604930786384455",
                "0.1239939630970672256830383333547345749715",
                "0.02832164544429639448544726257787460994445",
                "-0.08615855380056593645580964130927376008653",
                "-0.1316384264907522589160081049303867415337",
                "-0.07422499999629636945064688583647632258082",
                "0.03958850717008696093966220790500850413127",
                "0.1194768735646656342441831080661091607498",
                "0.1028383306372725892115129328402846447106",
                "0.004594706445448961763473985983547325723363",
                "-0.09508114034508249946620103403685420968092",
                "-0.1157587853953431814701285351919907828652",
                "-0.04200057419089771345262414076803115735324",
                "0.06445589292044385074500181846640067235222",
                "0.1158177653758444381932245482669481060940",
                "0.07070218064030088466548655862969148925606",
                "-0.03201033235329470775994610065219307698767",
                "-0.1061066149828694723083190999795944821714",
                "-0.09028343312396456438784991750548841098138",
                "0.0008042528016720683161691987966775338217196",
                "0.08952628214398248451072399425583716733647",
                "0.1012091348571043945576871961609800242009",
                "0.02715960331223073556907827689491037993050",
                "-0.06860602365067227291290196413717509910899",
                "-0.1044238580197953265360501622477860895626",
                "-0.05067501477959232464511516879988172326887",
                "0.04545444412824944171065206505873936803946",
                "0.1011020635182135852252772913152631936679",
                "0.06912245026380539024770925543444058002519"
            };
            ddouble[] num15meps_expecteds = {
                "9.256973740086818276556668796459652722131e14",
                "2.981023765093261470655777637218199758218e10",
                "7.449485766489365586955983360957946386937e7",
                "1.130581196061021822466525793941106469115e6",
                "46940.49684405467906842665471271378351026",
                "3741.856803824952643667572068908489555835",
                "474.7940904510087274553760563372850159455",
                "85.90267531233497883052953474919617797690",
                "20.69693748393366990088058057320507448562",
                "6.364745961353218859021448825565511352454",
                "2.440938361655320253483355735063513084710",
                "1.156577325973602426158093453872250001163",
                "0.6684953632938678848547606874400341211479",
                "0.4486783471914340486674053302697576120771",
                "0.3142545622197881715973753700021643492774",
                "0.1916396310283356572938240934796261988218",
                "0.05665908484016836402821043461628025402275",
                "-0.08048093390279761988365385871780039391827",
                "-0.1853731776910388589018083571940584280174",
                "-0.2182666143091572847968008853555591025765",
                "-0.1599258398028642199456616384202948695889",
                "-0.03166431117627127535429621464857228081798",
                "0.1057807115844930039879961974321491636159",
                "0.1800249080692364489470821124672102744639",
                "0.1490215231373686127254532920382813756318",
                "0.03099188814777743520772923908005798219631",
                "-0.1012149416278861019599315314283443276691",
                "-0.1634009850446247812199869099116865198003",
                "-0.1155640921689045612058167286486390045677",
                "0.008628927486518004697117522299811903243918",
                "0.1224290678845219958876014837312580722145",
                "0.1459023605135959982923267792675618756814",
                "0.06373319442213502852777378948109355614404",
                "-0.06235943313951383797415369932182943574962",
                "-0.1383350293554152977494992774989919619771",
                "-0.1081621977741818677431979898210950839684",
                "0.003318974313632282624090489150218224108113",
                "0.1091073754328559037498904682601782550151",
                "0.1273653210983134366945221923983327573902",
                "0.04544640729333049645430923581681661373593",
                "-0.07021760316804938135864310117016653912802",
                "-0.1271219591266203249714993333990773557855",
                "-0.08081739871917960992355207356744795135472",
                "0.02952552331217377570366258141266569823335",
                "0.1133423507948462388093608770835074108863",
                "0.1028072390395443953952524244884472689048",
                "0.008222276039854569903191031149979717528478",
                "-0.09107383729625278202686257490906262504881",
                "-0.1128797471999607593936205559604833416867",
                "-0.04041279903228588038768374824370649855585",
                "0.06429633185827094439288042428443883825510",
                "0.1130562045015818297905781234578848144596",
                "0.06583080609469947936018518685653697514963",
                "-0.03600483857562759342021542870816148464222",
                "-0.1054614485573141320932938214085587701854",
                "-0.08415103382368085902720088182969952175721",
                "0.008373206094912417867487432483561046778550",
                "0.09210568054835392328012392578689852436360",
                "0.09560024858539724634099934376875977398235",
                "0.01707926504770979922213717897452066533645",
                "-0.07478970376887725839873463609015487171958",
                "-0.1007358038705938539959783929830737109502",
                "-0.03934391920606539194867048695680914341020",
                "0.05507317332487191173019448547950835878882"
            };
            ddouble[] nup15peps_expecteds = {
                "-9.256973740086828419850514310123694561863e14",
                "-2.981023765093264737101255262273405225220e10",
                "-7.449485766489373749701742577601363314969e7",
                "-1.130581196061023061297492696214816208526e6",
                "-46940.49684405473052575310782373458332136",
                "-3741.856803824957033646397488078387328183",
                "-474.7940904510116160081976665163387551591",
                "-85.90267531234877070913842494604380613209",
                "-20.69693748399391260911668211400066276344",
                "-6.364745961564259283177609188671070219260",
                "-2.440938362264322421865562586796495527815",
                "-1.156577327453498831946387948983362811162",
                "-0.6684953663668757753892046750108810363675",
                "-0.4486783526890485102150879001771043592045",
                "-0.3142545707073508630975616999231609924851",
                "-0.1916396422607885285500549318691921549939",
                "-0.05665909731929188476620327846954363302490",
                "0.08048092287392343878945972731786123709538",
                "0.1853731711863993198806975157778545510031",
                "0.2182666143471731089117667946825857727890",
                "0.1599258459887487064854335154750615472571",
                "0.03166432034750520762368592254844069972804",
                "-0.1057807041518875946791528567522645735350",
                "-0.1800249062610691129343439109182376460664",
                "-0.1490215277161376960349855308449909836891",
                "-0.03099189611631267980033060197181080479771",
                "0.1012149353331364734288917976584202085457",
                "0.1634009843803593966599404170269514689080",
                "0.1155640973555522520887759226064709187893",
                "-0.008628920172064848857058869342065459725563",
                "-0.1224290635776291780986288662328999716909",
                "-0.1459023621512151764974333908713022362332",
                "-0.06373320063039313586405698462080077545295",
                "0.06235942704153406886850639341065030140346",
                "0.1383350278835082428296885699767648655637",
                "0.1081622018948992678665606940988684055981",
                "-0.003318967893848828897283167902128529292490",
                "-0.1091073717097384476847522638912347649656",
                "-0.1273653228859685117039442143248254977261",
                "-0.04544641304579641989765589300028778209517",
                "0.07021759809348360278076623495292697154951",
                "0.1271219587484884479019812707513162041573",
                "0.08081740322487085629311240849653529579852",
                "-0.02952551767184631664941003455809639699960",
                "-0.1133423486207270357396061956738091346553",
                "-0.1028072420256075527420291014833771996126",
                "-0.008222281622899492176989052575405494230930",
                "0.09107383377238544783694719063540241921298",
                "0.1128797486076948351319789927690974919861",
                "0.04041280409869182139033001832255771398934",
                "-0.06429632743563578575789049704971137172592",
                "-0.1130562044141943291421093790522039079969",
                "-0.06583081033101169264688067040066553175787",
                "0.03600483367138132378197055282254846314356",
                "0.1054614471466432259415577306608759597599",
                "0.08415103703891927040341783348532830338947",
                "-0.008373201073426647967150241938319623050231",
                "-0.09210567803666788585094632054622702338269",
                "-0.09560025068769456366443510863013162228086",
                "-0.01707926988242890951829404161074731065122",
                "0.07478970040190758710291198347439652949944",
                "0.1007358048460993543155303969788461799039",
                "0.03934392361146585112861013621763131290051",
                "-0.05507316935298817911449190910193361028268"
            };
            ddouble[] nup16meps_expecteds = {
                "-2.773781224080999703954819047159946936865e16",
                "-4.450123852134828049211112934446826679437e11",
                "-7.368655184955533856171018395357545223197e8",
                "-8.314116418781925175420353011522962132570e6",
                "-272949.0277102879825321646549456986607685",
                "-17862.81343783980324045559543247168092168",
                "-1906.675276744832021004432702362177395253",
                "-294.8647994882983320438538419659282802361",
                "-61.31574109926171656813666046465373889525",
                "-16.33416589100330146440389637091371890653",
                "-5.407585838237124511272358903047641220121",
                "-2.190065680134737276539480056934154767549",
                "-1.079266130394303255677735777946438776421",
                "-0.6398781457930269506235876881563793477068",
                "-0.4354460714999927314072434407810315097068",
                "-0.3075580094275423425070865099979523100426",
                "-0.1902179260491516879951168208613032004747",
                "-0.06093426995043970307587342315626310995886",
                "0.07165470941385738138641016755568562869595",
                "0.1761874792389887405022698911333727542930",
                "0.2148727717142508997682133366267007354822",
                "0.1668553174191010533267227572180498949768",
                "0.04780288361726652741238976726387700739653",
                "-0.08838878322920528157724086634482928117366",
                "-0.1724235709220091994846277855412012631433",
                "-0.1579989764436035204792950066636908511288",
                "-0.05300157902696978327133548042179812275609",
                "0.07962122032991796866455062932454047048305",
                "0.1573819447974802539656618751003280327999",
                "0.1308960444905121545003273726750264581462",
                "0.01874558332078177907110643574215752469005",
                "-0.1022237745346619040596659053875760675757",
                "-0.1483593783115960355512479364010414159267",
                "-0.08829325322205727538588675981597521449963",
                "0.03328735194254878706146021528251954520067",
                "0.1269260780789343143083964096878705866797",
                "0.1239939602486561942897149178756320151215",
                "0.02832163922265597751355789159107954241855",
                "-0.08615855859104050790190708233860422799616",
                "-0.1316384262225792967482060926321586218600",
                "-0.07422499500856850735317365683169856242566",
                "0.03958851286972210891514439566112732324799",
                "0.1194768754794928648690935915717215775524",
                "0.1028383273423718025325365336968265599882",
                "0.004594700690456218087898814469432627416806",
                "-0.09508114388528335206871485104858019105461",
                "-0.1157587839122352487367558094534541218968",
                "-0.04200056899865700625218613934648677737471",
                "0.06445589750473742378717946139566748590830",
                "0.1158177656051439191144450489551736224747",
                "0.07070217641503133724959532881852665415662",
                "-0.03201033744738832176184079154093962948135",
                "-0.1061066166964625690356962608280798842024",
                "-0.09028343009318621525062984124712197973315",
                "0.0008042579504250877522934304380289431390758",
                "0.08952628504752351087720437976774647357020",
                "0.1012091331101581787462638901315347481773",
                "0.02715959847412782117896620949418413675303",
                "-0.06860602742570264453662872624022587267395",
                "-0.1044238575423365221324797965282769054350",
                "-0.05067501052845315025694798703274991059101",
                "0.04545444845979333015379125215266641864806",
                "0.1011020642211851654579954597374639962361",
                "0.06912244679360466205618231041169858148595"
            };
            ddouble[] nu0peps_expecteds = {
                "0.08825694630493252623467138280170821278216",
                "0.5103756674092030992223932007730143396046",
                "0.3768500160997455735715922234858492623730",
                "-0.01694073002910280558583309699667427576323",
                "-0.3085176210920812588678294405366482203783",
                "-0.2881946875076857990119573227402055710383",
                "-0.02594975099107149399594551124272239990295",
                "0.2235214853697890565312756840938809622102",
                "0.2499367003994353740503525177714793709297",
                "0.05567117304014139195663966796761699049263",
                "-0.1688473198850813299857490280781044710747",
                "-0.2252373137506102508728235226496956490462",
                "-0.07820786937133086769609339216401327998866",
                "0.1271925645779199575608218476912836813654",
                "0.2054642963718660239144950991094817172541",
                "0.09581100117452065374927218180183198056200",
                "-0.09263719446659796727769398555050258203985",
                "-0.1875521592987953689168459950893271590857",
                "-0.1095196948174511851255412467475644325164",
                "0.06264059289988939657887659617541041311510",
                "0.1702017575659607709697144366486215724663",
                "0.1198876006247231279017075445145943723442",
                "-0.03598178647215731786013837206067725485366",
                "-0.1528340274814231822557444094250566891992",
                "-0.1272494345212927855568678366953303588878",
                "0.01204462220932809562643247862466618773529",
                "0.1352149745052248454709067027983405090746",
                "0.1318364721358957010972011152379049139145",
                "0.009481163182483447339910925488928015385875",
                "-0.1172957296650754390374677951127235295420",
                "-0.1338326617022574335464306133099902330666",
                "-0.02874248788640576549236726417886663467841",
                "0.09913482324409503357770431660735221903879",
                "0.1334040499953886893728907461615423097560",
                "0.04579799016419310941476896162301109635050",
                "-0.08085608625462319420768443722212586916851",
                "-0.1307148793428470351247146227160696750746",
                "-0.06066076539545894001829057930864973177339",
                "0.06262353114037084976589912722719185651164",
                "0.1259364168858263760007492490205245978792",
                "0.07332424140441402552336437454890710018040",
                "-0.04462497297006206642030622272954874501458",
                "-0.1192515106160313802944329378489935318984",
                "-0.08377858800319901725493701134337990103798",
                "0.02706046705238164467073083299056065306540",
                "0.1108564639563610271972605616437515221627",
                "0.09202144258741674564848264243597411255274",
                "-0.01013358415276521797181421449304188609794",
                "-0.1009611338778363939229957598021315913519",
                "-0.09806499677645886313719865294114678475494",
                "-0.005955517098598129013323873622461063722350",
                "0.08978780217306840020581704618385174611802",
                "0.1019406053322532128261678730982784633814",
                "0.02101578292034336990098766801075718622899",
                "-0.07756917698548367278663919425044072685910",
                "-0.1037016076670498154391019939891602178461",
                "-0.03487003025597415186477948410845631293489",
                "0.06454577320949366928471452177725486806055",
                "0.1034247919633302100309851462998189367249",
                "0.04735895435050148118243930155057368929486",
                "-0.05096285698804588883301272737458934940359",
                "-0.1012107840227339587840909558739981545516",
                "-0.05834446871756297995612105331979996383821",
                "0.03706710106486267728321763878887186204776"
            };
            ddouble[] nu0meps_expecteds = {
                "0.08825698212642148236441346060430675698809",
                "0.5103756778902868940039700989768370421746",
                "0.3768500039258349695777847984231332323928",
                "-0.01694074862102719046062394728082797180129",
                "-0.3085176294059861412748937964887086575625",
                "-0.2881946804554723465852187986958933555519",
                "-0.02594973694334701219246875670661804104789",
                "0.2235214934053432671657715793222549078308",
                "0.2499366961706138391729264892044208985584",
                "0.05567116152705735502009297611180159363040",
                "-0.1688473278990776647333759131400969240846",
                "-0.2252373115181124923935168206986486052610",
                "-0.07820785968442090802570425107565643520208",
                "0.1271925725864473522830133480376540212124",
                "0.2054642957059703929915499957063988697024",
                "0.09581099298690409766173160575729085980398",
                "-0.09263720241804936927350959501528955954358",
                "-0.1875521599240257578406966475958938555909",
                "-0.1095196879532317217362033505806613990955",
                "0.06264060071887823329465079523498465370098",
                "0.1702017592783506682484081374547631629385",
                "0.1198875949766199247365024021589226129113",
                "-0.03598179407524832866215290565994904926352",
                "-0.1528340301137522920428656234946273885116",
                "-0.1272494300147194195635057473587543982372",
                "0.01204462951218310462009349723325235615207",
                "0.1352149779105197885551161732363748655530",
                "0.1318364687111688736645660705682416868944",
                "0.009481156261183260074205958402419762716312",
                "-0.1172957337082525478551611574110297606998",
                "-0.1338326593050311432502846222708224248303",
                "-0.02874248142246081427499143161429663574595",
                "0.09913482779766383344320598691722727790941",
                "0.1334040485712699585370422350783186758144",
                "0.04579798422611814681648911619077659542002",
                "-0.08085609119658899337633365244289473301846",
                "-0.1307148788343428093890344226349473018026",
                "-0.06066076004315714722817617422649326422394",
                "0.06262353635340091708579393155157886055728",
                "0.1259364172306954135579888636685537862557",
                "0.07332423668816326327573950048535096166542",
                "-0.04462497834140555916639087064402380403654",
                "-0.1192515117465411213590210846687496669190",
                "-0.08377858396289083117247544185667353641448",
                "0.02706047247424491649779774915122138744235",
                "0.1108564657991603585749335270588707918762",
                "0.09202143925202017370417204827307755530001",
                "-0.01013358952295624073663208984215587889951",
                "-0.1009611363542656784346471903151408962590",
                "-0.09806499416369524095059996181739227486122",
                "-0.005955511875879551304100881349849486487505",
                "0.08978780519978869790509077698269567166793",
                "0.1019406034484740207508972400705711948643",
                "0.02101577793365560108562213327932644094494",
                "-0.07756918047534158391577571979044491369498",
                "-0.1037016065073112918200096625212965334733",
                "-0.03487002558578657102816349593411750220365",
                "0.06454577707255857953824652194626508516188",
                "0.1034247915116579834187247094885852854946",
                "0.04735895006839729094012566942260618203478",
                "-0.05096286113276883319098180408500158844721",
                "-0.1012107842525693708691617204086291025070",
                "-0.05834446488552811814867982726507839228973",
                "0.03706710539931396785678391271405823171726"
            };
            ddouble[] nu4peps_expecteds = {
                "-33.27842398056964520644409439373936022268",
                "-2.765943271901256745663727439195334205253",
                "-0.9166828466406907488943066150929590310804",
                "-0.4889367724961276685485249994446565945462",
                "-0.1921422919467944331252418451362617247231",
                "0.09839103893699599806490437160629312471639",
                "0.2903099814443280599095188377342181551547",
                "0.2829432261319060608195600015502864906071",
                "0.09002576727919104390210695047655091934174",
                "-0.1449495081139313456618191431088002834420",
                "-0.2485117871886543801737356271525770403326",
                "-0.1512177078040736966596419824319671109732",
                "0.05758958713243615457011671934865173768643",
                "0.2039285207223392964938179933181571866069",
                "0.1726085523320008192766741351026876452751",
                "-0.00007321787227695548568904103240537593380274",
                "-0.1619952717147167152824156257510277179715",
                "-0.1772167912670522005944500247764200397654",
                "-0.04031256534285081894652699388802810848178",
                "0.1240937344021546009365192178604784402829",
                "0.1731663353526979140473704728308903189193",
                "0.06962420455535804569176432204237787243564",
                "-0.08994430798380451981416323593864028744783",
                "-0.1639683009153629221377189909543120429951",
                "-0.09104107377468090878450237917890153996798",
                "0.05912892403468817701021276432260006932825",
                "0.1514073170550688472532851943511313655520",
                "0.1063880477977439838128638970574865044566",
                "-0.03133505771830997815873688762934461369915",
                "-0.1365312399927155443790188532862763874246",
                "-0.1168026902616476769861508858905255892391",
                "0.006364425635575906653944064497547288658399",
                "0.1200415273587630235083207270867863140366",
                "0.1230537611959311149822598481996440258680",
                "0.01589771053634154976119523760903890837008",
                "-0.1024634584403111328086804837835460292537",
                "-0.1257045863783116646768613189700800416343",
                "-0.03551313608282441451088281742619607307848",
                "0.08422573900398873420328149395761011111255",
                "0.1252017272310070920615672987910235026354",
                "0.05251454066302734765864505000074143168262",
                "-0.06569934593881904635304726273601752766787",
                "-0.1219251329126183969365188567145817716066",
                "-0.06692296937883153486034470607502205454324",
                "0.04721670761462543953858224566476508913548",
                "0.1162172166480071127388243569457915845754",
                "0.07876030651290874340988739863955394319166",
                "-0.02908087167400719006228496829024953538837",
                "-0.1083997882631995085382903717537240287360",
                "-0.08805807565505746881888893745208642246366",
                "0.01156937995897391912146480633512664638175",
                "0.09878366850067354819210786804213115282709",
                "0.09486350234590770308631935360998878507412",
                "0.005064702100102550073481548729263262513036",
                "-0.08767372240866551801854456109257935996995",
                "-0.09924350116839759820032894561476337744893",
                "-0.02059326322087633387672153192282657374669",
                "0.07537093747335580486729267955978624447528",
                "0.1012870473596006781502830258784334040352",
                "0.03481436225659149819488172763474270882546",
                "-0.06217255614168306175189612598048173707113",
                "-0.1011062579477434292047182518749193742578",
                "-0.04755372032642940471050554291066455184196",
                "0.04837091843853726507795797929009227434712"
            };
            ddouble[] nu4meps_expecteds = {
                "-33.27842207737462166087059726297670850304",
                "-2.765943180759945628613804971655523476995",
                "-0.9166828308095883821598732013820174510760",
                "-0.4889367645715573482325146532021055040769",
                "-0.1921422828005919333330459950224551226153",
                "0.09839104796505844522283032029593116473647",
                "0.2903099855647562785594698227385422688473",
                "0.2829432224904377279608967406094795052671",
                "0.09002575837838952134170505064238708392822",
                "-0.1449495156222561801966884115418266716853",
                "-0.2485117875891010585680031505001833384706",
                "-0.1512177010309386408302996142737264620211",
                "0.05758959533960592080169189112796707670014",
                "0.2039285235686811599474541508500053966827",
                "0.1726085476601390705346375057293136363252",
                "-0.00007322583633109268880433993255995454005700",
                "-0.1619952760815483555249930455924164711129",
                "-0.1772167884371358850613830796730784489261",
                "-0.04031255801927372211548126683232671300368",
                "0.1240937397171537321969353315294326350319",
                "0.1731663341070211450752215378773167016560",
                "0.06962419806158990137866786132856589788485",
                "-0.08994431385925213655606831670540665194701",
                "-0.1639683010266400129685651333480089138865",
                "-0.09104106820550472260722436797908980766992",
                "0.05912893018722795365870249393776648659466",
                "0.1514073183229344877981978891534626001553",
                "0.1063880431975869596083434674135938344921",
                "-0.03133506392901499940361633647795046336322",
                "-0.1365312422367915642701709486833575669604",
                "-0.1168026866438216880250594031347626006546",
                "0.006364431728964933430070873724982711179858",
                "0.1200415304132048078697034435991847665820",
                "0.1230537585518595864610531892681995607854",
                "0.01589770470385774462371091550334163899129",
                "-0.1024634621502252299213234727515015848364",
                "-0.1257045846824214537017315080554358027734",
                "-0.03551313062955267868843177735924827814548",
                "0.08422574322332503774199776803214983777715",
                "0.1252017264436544070902489894763174177954",
                "0.05251453568590432509218179069389924916681",
                "-0.06569935052930826508305914907401328289523",
                "-0.1219251329821099820499357694831403686545",
                "-0.06692296495582840276076336944295484431254",
                "0.04721671244542806346463673370446527852878",
                "0.1162172175122170317767689284636727215757",
                "0.07876030270459069437477488482930612651517",
                "-0.02908087662183249208685137410232242425173",
                "-0.1083997898510242961547812260305499396789",
                "-0.08805807250568206719709616917355038857239",
                "0.01156938490849615132751230643923868930574",
                "0.09878367073344310451881543601292040252841",
                "0.09486349988429240455915782748199720286049",
                "0.005064697255655841993461097538264218574477",
                "-0.08767372520156291035415781757155625405704",
                "-0.09924349940869758782699584137067330664452",
                "-0.02059325857905603610921704727425256984206",
                "0.07537094073686479202333769417124655726189",
                "0.1012870463020842030719386673368496136215",
                "0.03481435790504783696069504200535365886191",
                "-0.06217255978306312764076951601391628130998",
                "-0.1011062575796176776740332841063708203143",
                "-0.04755371634227462778224919140577159236953",
                "0.04837092236331516914919922139498284819720"
            };

            for (int n = -16; n <= 16; n++) {
                foreach (ddouble u in new ddouble[] {
                    Math.ScaleB(-1, -12), Math.ScaleB(-1, -13), Math.ScaleB(-1, -11), Math.ScaleB(-1, -21), Math.ScaleB(-1, -26), Math.ScaleB(-1, 96),
                    Math.ScaleB(1, -12), Math.ScaleB(1, -13), Math.ScaleB(1, -11), Math.ScaleB(1, -21), Math.ScaleB(1, -26), Math.ScaleB(1, -96) }) {
                    ddouble nu = n + u;

                    if (ddouble.Abs(nu) > 16) {
                        continue;
                    }

                    for (ddouble x = 1d / 32; x <= 8; x += 1d / 32) {
                        ddouble y = DDoubleOptimizedBessel.RealBessel.BesselY(nu, x);
                        ddouble y_dec = DDoubleOptimizedBessel.RealBessel.BesselY(ddouble.BitDecrement(nu), x);
                        ddouble y_inc = DDoubleOptimizedBessel.RealBessel.BesselY(ddouble.BitIncrement(nu), x);

                        Console.WriteLine($"{nu}, {x}");
                        Console.WriteLine(y);
                        Console.WriteLine(y_dec);
                        Console.WriteLine(y_inc);

                        Assert.IsTrue(ddouble.Abs((y_dec - y) / y) < 1e-25);
                        Assert.IsTrue(ddouble.Abs((y_inc - y) / y) < 1e-25);
                    }
                }
            }

            ddouble eps = Math.ScaleB(1, -26);

            foreach ((ddouble nu, ddouble[] expecteds) in new (ddouble, ddouble[])[] {
                (-16 + eps, num16peps_expecteds), (-15 - eps, num15meps_expecteds), (15 + eps, nup15peps_expecteds), (16 - eps, nup16meps_expecteds),
                (+eps, nu0peps_expecteds), (-eps, nu0meps_expecteds), (4 + eps, nu4peps_expecteds), (4 - eps, nu4meps_expecteds),
            }) {
                for ((ddouble x, int i) = (1, 0); i < expecteds.Length; x += 1, i++) {
                    ddouble expected = expecteds[i];

                    ddouble actual = DDoubleOptimizedBessel.RealBessel.BesselY(nu, x);

                    Console.WriteLine($"{nu}, {x}");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual);

                    Assert.IsTrue(ddouble.Abs((expected - actual) / expected) < 8e-25);
                }
            }
        }

        [TestMethod]
        public void BesselKInterpolateTest() {
            ddouble[] nu15peps_expecteds = {
                "1.403066871586938868772687579047436898106e15",
                "4.059213493620098616296963229879609554535e10",
                "8.484692239802017865177020687811668023146e7",
                "1.002689640278238458401949877427475467540e6",
                "30169.76710466898811589135798283246580366",
                "1621.164430660170559323471312169099810074",
                "128.8397332142382014800955075180909566570",
                "13.53998723524101566418812190028786905076",
                "1.751442936804272956413164547000211881229",
                "0.2656563894946374795882956780530125790071",
                "0.04566016513712899176382623028553515249655",
                "0.008674111848300782581424750701922070173468",
                "0.001787667725325096622724904545728406392536",
                "0.0003940335773735938465727811084848242005875",
                "0.00009186390465427953253107442454747933976327",
                "0.00002245484588402089903267913011674238235648",
                "5.714428794407082528405219402286605262467e-6",
                "1.505406415604555536000264842174702041266e-6",
                "4.086202744866016042645964312018958162390e-7",
                "1.138383177541522133399738245618441784029e-7",
                "3.244550591353423482340183896978752428283e-8",
                "9.434875106876049879577393006291051027410e-9",
                "2.792747962773598427332017802736085202267e-9",
                "8.398217984231148529266671551946410709571e-10",
                "2.561353288694205663818772911698263806696e-10",
                "7.911274913230110322113026783014760307883e-11",
                "2.471552123848951290361450010927858345225e-11",
                "7.801202425808962825804565773121579759058e-12",
                "2.485441433347420880642514600649693260401e-12",
                "7.985977271210910896160004811594289269456e-13",
                "2.585893805106255769335844344841395828224e-13",
                "8.432647860673637568601464666466849084629e-14",
                "2.767785414696783412792946607923748763773e-14",
                "9.138778967268500546359323460235013129729e-15",
                "3.034082380105732161438785803937610369116e-15",
                "1.012434791120766095598808806234426077542e-15",
                "3.394240610008856881003134811247778111344e-16",
                "1.142892859779390023790794707353667910195e-16",
                "3.863859892947524866561558099525506369515e-17",
                "1.311198141172736757731068030784449863189e-17",
                "4.465145640364524509633148177481840529127e-18",
                "1.525535753654483503117406246672211356496e-18",
                "5.228011184449736193943539215777507160408e-19",
                "1.796775150527224712330071694155628476928e-19",
                "6.191798998600231399812235056688499133499e-20",
                "2.139119065737212993163778022477201803480e-20",
                "7.407690704398927964307325684199094089103e-21",
                "2.570990080571047024294098624883166565751e-21",
                "8.941948685868828557987376727706770808687e-22",
                "3.116211193280522145861875664952811999598e-22",
                "1.088020451098339155783718799192005348284e-22",
                "3.805560963027792361717178480702283241933e-23",
                "1.333309236041203575578638613085895528731e-23",
                "4.678812810449070270134293655491646757486e-24",
                "1.644362835628122122660098148978099984496e-24",
                "5.787404719998747057161029082468023148029e-25",
                "2.039686832766426284474346029988300913104e-25",
                "7.197933040419453531840256477683625486437e-26",
                "2.543254803361784596348009615303997132348e-26",
                "8.996726162865761545657349272430238411077e-27",
                "3.186163490541742099727462845900324837138e-27",
                "1.129583550121639189037549253014997064541e-27",
                "4.008801676737022776408662101076080265174e-28",
                "1.424088885242839926544185784739113591332e-28"
            };

            ddouble[] nu16meps_expecteds = {
                "4.214204277830513066828974811958135247897e16",
                "6.117656685007091287346848831379093587956e11",
                "8.574504275417349104484153231325888728321e8",
                "7.660406057419185609958558898859944985085e6",
                "186233.5776616408636901158235679438655462",
                "8437.649460623175282672823725528954960426",
                "582.4779938979313646751114846160497950978",
                "54.35542747314990805961710097978277310235",
                "6.350009807338722008178451756679664450445",
                "0.8816292349085238485895215742709803952768",
                "0.1402229910896001730833997359332700494875",
                "0.02487271802871635633399931506752018951102",
                "0.004822408635559520111976885387176317590561",
                "0.001006351746414639093986595679001601603872",
                "0.0002233361316810656516058070272842934471482",
                "0.00005220990370188423031857302529932421965829",
                "0.00001275870406122970135629277829752815108369",
                "3.239044918735965531434211362853071656000e-6",
                "8.498915419222664293061312427751843028708e-7",
                "2.295116451590596403538365080049930196106e-7",
                "6.356245477460882482065616970423096388788e-8",
                "1.799921554584578909708865505802016505307e-8",
                "5.198310392497553621830592539727641176630e-9",
                "1.527868589559803013167256292397668942379e-9",
                "4.561597084168945627688401591991276974054e-10",
                "1.381201257722017632799582865408526128778e-10",
                "4.235455426020613514692595217616453419075e-11",
                "1.313765124784473005705636474689969884092e-11",
                "4.117623282165526726128691750415757161878e-12",
                "1.302804441742961182909421666040576887159e-12",
                "4.157723784759276100070083815478033859065e-13",
                "1.337385847910631203727815186849959925333e-13",
                "4.333099293337672732356454213080950306514e-14",
                "1.413279478889610528520264275960299539614e-14",
                "4.637865671418632881620450430750556369460e-15",
                "1.530612837382106208626116953372327315171e-15",
                "5.077924874990664461721598870459796183187e-16",
                "1.692838073414880814091496121606389325309e-16",
                "5.668954926736149169697719006737335413187e-17",
                "1.906396107782960892071366562073417341498e-17",
                "6.436092486888634042064881359772940670266e-18",
                "2.180809904385539614610301197482648746453e-18",
                "7.414757099209312315068244542228875795461e-19",
                "2.529097371533375658610567144225532236043e-19",
                "8.652416723696311316063182902109740103253e-20",
                "2.968474670022412902316004909308303845743e-20",
                "1.021128564416269780163334799038011150247e-20",
                "3.521368612727078805634385322859173034171e-21",
                "1.217207247909755359829461309635054405126e-21",
                "4.216792340479243385842163775422577562502e-22",
                "1.463900141769461702950483645922300861421e-22",
                "5.092171395278159012629411221713374741161e-23",
                "1.774643716409472261400907609351718557472e-23",
                "6.195743458570075198676894081520968073441e-24",
                "2.166756867392744070801507601221865213562e-24",
                "7.589698690426267100050558340582090221814e-25",
                "2.662576155866642940268206424241537007799e-25",
                "9.354282900246340491393021879490939418262e-26",
                "3.290938759286188464098103067336424408915e-26",
                "1.159315733388943571659737251443629312240e-26",
                "4.089119824166956239430249722035120595102e-27",
                "1.444040239239749311994589680724631098461e-27",
                "5.105364795721494904691438672230795217777e-28",
                "1.806967544888067178942416453008170274708e-28"
            };

            ddouble[] nu0peps_expecteds = {
                "0.4210244382407083675095181066875846403623",
                "0.1138938727495334408953704149102715099624",
                "0.03473950438627924919575262563462795502117",
                "0.01115967608585302454841681497506886556538",
                "0.003691098334042594349863359948020582799301",
                "0.001243994328013123106609198650329600597113",
                "0.0004247957418692318131688864322483851011307",
                "0.0001464707052228153890166619237176490746840",
                "0.00005088131295645924816611423824031674477503",
                "0.00001778006231616765199975538933931827496789",
                "6.243020547653677205684115539569114170540e-6",
                "2.200825397311491420096705669230727308814e-6",
                "7.784543861420496384936459292714066402319e-7",
                "2.761370823981619912494148409413943248658e-7",
                "9.819536482396434611406299263448366698198e-8",
                "3.499411663936498959615520520484621113328e-8",
                "1.249466402631773199029849871065202990584e-8",
                "4.468753337309382946506765014908563793195e-9",
                "1.600671286929361461972061856141953992802e-9",
                "5.741237815336524323830216722249121482451e-10",
                "2.061767969985317740584591118559049458522e-10",
                "7.412351614084865405541568255265084352323e-11",
                "2.667545110351910024560510539331025273096e-11",
                "9.608818780833115736826081428051423702334e-12",
                "3.464161562213114370487364089811436473477e-12",
                "1.249877397985072382574043626561539950052e-12",
                "4.512864531191103199097097667134964576841e-13",
                "1.630534586888181043710948804342301938713e-13",
                "5.894950728792560125738827948365508554713e-14",
                "2.132477496463056378931629472347911721423e-14",
                "7.718382655527615410992529019381148841432e-15",
                "2.795057518761978780128804534046054591403e-15",
                "1.012661232385917137121726956916836042788e-15",
                "3.670575965856507777127672063833559263029e-16",
                "1.331035149142946856998555991783278924326e-16",
                "4.828583383110977144232937339221944369683e-17",
                "1.752327700467563032037754375653194598729e-17",
                "6.361617158869049189796555443969297260318e-18",
                "2.310299363782939575207758233959769631798e-18",
                "8.392861100099567056739574783528297501407e-19",
                "3.049902355629898859521909905509960767144e-19",
                "1.108637410487518780801043372787954153212e-19",
                "4.031018967380424370425306506169379165176e-20",
                "1.466075394928634942497038961248295669137e-20",
                "5.333456122618724920351067736708271269086e-21",
                "1.940739538197455190683465620434790411161e-21",
                "7.063620292739704865243839458509277923315e-22",
                "2.571489448024888766307749339598473718586e-22",
                "9.363440674759581734767175286571300445586e-23",
                "3.410167749789495521418637836629883382048e-23",
                "1.242230119331298074452587772660387987483e-23",
                "4.525963774481406884212704390782739443894e-24",
                "1.649300011034368090715994964856508519843e-24",
                "6.011250945652075973777747044605473353160e-25",
                "2.191310218353415080954541921913266133734e-25",
                "7.989397509426648858581224855497542199164e-26",
                "2.913351243237805536542634480517540779426e-26",
                "1.062522020595904335125741898241476878022e-26",
                "3.875672294762622370988100433546550174681e-27",
                "1.413897840559107811690464296082755413868e-27",
                "5.158801891144037590289762723248681669774e-28",
                "1.882511194921017492965107429146771962391e-28",
                "6.870404970776682325762809063672919683061e-29",
                "2.507733605169036583060257428593942106355e-29"
            };

            ddouble[] nu4meps_expecteds = {
                "44.23241454509890261218754691489497070996",
                "2.195915883346316597458679893598564058936",
                "0.3058512053207499691525064526650751677263",
                "0.06222881139063550261877638887132344162163",
                "0.01525906565402937027914492008985087260301",
                "0.004163865626552438405413263031621806675645",
                "0.001215483717546321316094145744241535833275",
                "0.0003713322925571210047994486669935379099747",
                "0.0001171662601091251610213393793740559632580",
                "0.00003786143694982652580128995746774609522369",
                "0.00001245891219702691881131911462173732701409",
                "4.158433405604593471794462757336860314842e-6",
                "1.403798096985201666807477771970652208981e-6",
                "4.782837255251859334206535013510413423690e-7",
                "1.642011390395178891090528645996976251560e-7",
                "5.673331418331881372754812159605271935089e-8",
                "1.970826893989184287349061306627147316562e-8",
                "6.878115533901780094087225360662493029570e-9",
                "2.410060685040178142059124172940650645962e-9",
                "8.474233595385442918530522078253383312703e-10",
                "2.988834269852086416299423771409316611777e-10",
                "1.057006456639870789090651283767109986063e-10",
                "3.747120002200426641364895917009834432930e-11",
                "1.331223792086727899357546474211391223064e-11",
                "4.738527032828744757042111825513869921038e-12",
                "1.689635040297683738435036214186150526214e-12",
                "6.034329229320852041624050753407718176397e-13",
                "2.158191648746643175987404242348417947539e-13",
                "7.728975155545082948148868595237727080841e-14",
                "2.771259170584966837008434883042342622778e-14",
                "9.947492502403786140793493977634203505307e-15",
                "3.574324302243906759201156695868981485287e-15",
                "1.285537627548332599098074461927590450536e-15",
                "4.627604954435118763435438975757662838284e-16",
                "1.667176495725410796461370000481946063232e-16",
                "6.010858619833729446797937140112983234858e-17",
                "2.168698662314228794508537049678337656966e-17",
                "7.829785084180197166863401590489216095660e-18",
                "2.828592376120083084047224781658212095452e-18",
                "1.022455324151264821446510532749170576133e-18",
                "3.697913356555937565764728944358689965676e-19",
                "1.338116001268158664662272401250755352016e-19",
                "4.844431174410871743703420957847186552464e-20",
                "1.754656740838101635314648236844063833705e-20",
                "6.358155812199835612145457175820183558687e-21",
                "2.304888197373786216180584631521360974338e-21",
                "8.358706592036837382480742112723587895165e-22",
                "3.032426640591180184754278354013867331604e-22",
                "1.100514130734281852644460829903696615418e-22",
                "3.995284247005999848373942862111633192952e-23",
                "1.450907166127179130131176895482166339133e-23",
                "5.270660624270811327297080601507722319484e-24",
                "1.915216985971870966606898708253220269536e-24",
                "6.961339656877132789218763964202582465492e-25",
                "2.530954436765896132614764791272457728020e-25",
                "9.204232307087596584865636470530717011691e-26",
                "3.348096250391483708291227137429448793076e-26",
                "1.218178885967945923573731871263549980913e-26",
                "4.433256674689734558846884917431468096047e-27",
                "1.613724901893280759748460932874600186845e-27",
                "5.875262805075752390782834443760161012972e-28",
                "2.139502638163880311331275714647264203074e-28",
                "7.792608051450781162115859376878068365469e-29",
                "2.838796346357414554473262535926626282307e-29"
            };

            ddouble[] nu4peps_expecteds = {
                "44.23241714902682737751897364163913211347",
                "2.195915971477601046264911611004765438326",
                "0.3058512146514684627509898774745571523742",
                "0.06222881291860600361258732587579775974449",
                "0.01525906596697178897787992333467692053513",
                "0.004163865699779555898188905075763892440721",
                "0.001215483736241038092239891274670270745687",
                "0.0003713322976290613163891885805359509133424",
                "0.0001171662615478091198776851454435377089836",
                "0.00003786143737195744409880227208873166738009",
                "0.00001245891232420793565526746390649816167413",
                "4.158433444743314147740707334186791741408e-6",
                "1.403798109240316045685996291756640319293e-6",
                "4.782837294181692361895347087260976410074e-7",
                "1.642011402912733966025238987180761907812e-7",
                "5.673331459000070659179154595400487833869e-8",
                "1.970826907320400002995765767472044475814e-8",
                "6.878115577943285427223470426916528324745e-9",
                "2.410060699689563913017647045072890241674e-9",
                "8.474233644408303743434151029147053473000e-10",
                "2.988834286345557088276371266278443381309e-10",
                "1.057006462215781994050942820892024772061e-10",
                "3.747120021132661476563779539496994462586e-11",
                "1.331223798540164978941793523501739390965e-11",
                "4.738527054905149208774857730996100725098e-12",
                "1.689635047874355945847763482026355252675e-12",
                "6.034329255401782105303266603011388920709e-13",
                "2.158191657749030189593725655783762330313e-13",
                "7.728975186697366274453935589211285340003e-14",
                "2.771259181390283033555323413380576244794e-14",
                "9.947492539963912264076355629690651339674e-15",
                "3.574324315326466610001922011576083346583e-15",
                "1.285537632113695366560659831145976750407e-15",
                "4.627604970394690048207859814213581790798e-16",
                "1.667176501313740727358180077591948890545e-16",
                "6.010858639431817062855350574552578437029e-17",
                "2.168698669197201480873492292937955182995e-17",
                "7.829785108386720092790545270304890941806e-18",
                "2.828592384644195851040958226706639509074e-18",
                "1.022455327156617996017926571881973655380e-18",
                "3.697913367164169299325609301913145205874e-19",
                "1.338116005016727058973320746213903649774e-19",
                "4.844431187670722226526082983198405309157e-20",
                "1.754656745533150755978542317623958898929e-20",
                "6.358155828839676776812741732937322628517e-21",
                "2.304888203276427628419733094286828356804e-21",
                "8.358706612993098985636821171845142388172e-22",
                "3.032426648037378901944315625267429185026e-22",
                "1.100514133382130486309033052967782943109e-22",
                "3.995284256428686395145896623748466537064e-23",
                "1.450907169482744117137753394990441870645e-23",
                "5.270660636228658547361366423106009110788e-24",
                "1.915216990235944464389524696690825103903e-24",
                "6.961339672092040390691075805807145864207e-25",
                "2.530954442198101733851047473662426206508e-25",
                "9.204232326493560621213096345388663641106e-26",
                "3.348096257327927302382792226611845121310e-26",
                "1.218178888448633701255350349339137671012e-26",
                "4.433256683566044377729813206449643037724e-27",
                "1.613724905070958391484201353583955322443e-27",
                "5.875262816457176959162808752688578566807e-28",
                "2.139502642242240446520115973401416067088e-28",
                "7.792608066071536453807716552700595037235e-29",
                "2.838796351601174465433483010391037452021e-29"
            };

            for (int n = -16; n <= 16; n++) {
                foreach (ddouble u in new ddouble[] {
                    Math.ScaleB(-1, -25), Math.ScaleB(-1, -30), Math.ScaleB(-1, -50), Math.ScaleB(-1, 96),
                    Math.ScaleB(1, -25), Math.ScaleB(1, -30), Math.ScaleB(1, -50), Math.ScaleB(-1, -96) }) {
                    ddouble nu = n + u;

                    if (ddouble.Abs(nu) > 16) {
                        continue;
                    }

                    for (ddouble x = 1d / 4; x <= 8; x += 1d / 4) {
                        ddouble y = DDoubleOptimizedBessel.RealBessel.BesselK(nu, x);
                        ddouble y_dec = DDoubleOptimizedBessel.RealBessel.BesselK(ddouble.BitDecrement(nu), x);
                        ddouble y_inc = DDoubleOptimizedBessel.RealBessel.BesselK(ddouble.BitIncrement(nu), x);

                        Assert.IsTrue(ddouble.Abs((y_dec - y) / y) < 2e-27);
                        Assert.IsTrue(ddouble.Abs((y_inc - y) / y) < 2e-27);
                    }
                }
            }

            ddouble eps = Math.ScaleB(1, -26);

            foreach ((ddouble nu, ddouble[] expecteds) in new (ddouble, ddouble[])[] {
                (15 + eps, nu15peps_expecteds), (16 - eps, nu16meps_expecteds),
                (eps, nu0peps_expecteds), (4 - eps, nu4meps_expecteds), (4 + eps, nu4peps_expecteds)
            }) {
                for ((ddouble x, int i) = (1, 0); i < expecteds.Length; x += 1, i++) {
                    ddouble expected = expecteds[i];

                    ddouble actual = DDoubleOptimizedBessel.RealBessel.BesselK(nu, x);

                    Console.WriteLine($"{nu}, {x}");
                    Console.WriteLine(expected);
                    Console.WriteLine(actual);

                    Assert.IsTrue(ddouble.Abs((expected - actual) / expected) < 2e-25);
                }
            }
        }
    }
}